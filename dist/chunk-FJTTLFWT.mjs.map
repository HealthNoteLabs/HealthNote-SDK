{"version":3,"sources":["../src/charts/svg.ts"],"sourcesContent":["import { TimeSeriesPoint } from '../types.js';\r\n\r\nexport interface ChartOptions {\r\n  width?: number; // px\r\n  height?: number; // px\r\n  stroke?: string; // CSS color for line/bar\r\n  fill?: string; // bar fill or line area fill\r\n}\r\n\r\nconst DEFAULT_OPTS: Required<ChartOptions> = {\r\n  width: 320,\r\n  height: 180,\r\n  stroke: '#007aff',\r\n  fill: 'none',\r\n};\r\n\r\nfunction sanitizeSeries(series: TimeSeriesPoint[]): TimeSeriesPoint[] {\r\n  return series.filter((p) => Number.isFinite(p.value));\r\n}\r\n\r\nexport function lineChartSVG(series: TimeSeriesPoint[], opts: ChartOptions = {}): string {\r\n  const options: Required<ChartOptions> = { ...DEFAULT_OPTS, ...opts } as any;\r\n  const data = sanitizeSeries(series);\r\n  if (!data.length) return '<svg xmlns=\"http://www.w3.org/2000/svg\"></svg>';\r\n  const { width, height, stroke } = options;\r\n\r\n  // Compute scales\r\n  const minVal = Math.min(...data.map((d) => d.value));\r\n  const maxVal = Math.max(...data.map((d) => d.value));\r\n  const yScale = (v: number) => {\r\n    if (maxVal === minVal) return height / 2;\r\n    return height - ((v - minVal) / (maxVal - minVal)) * (height - 20) - 10; // padding 10px\r\n  };\r\n  const xScale = (i: number) => {\r\n    return (i / (data.length - 1)) * (width - 20) + 10; // padding\r\n  };\r\n\r\n  // Build path\r\n  let path = '';\r\n  data.forEach((d, i) => {\r\n    const x = xScale(i);\r\n    const y = yScale(d.value);\r\n    path += i === 0 ? `M${x},${y}` : ` L${x},${y}`;\r\n  });\r\n\r\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\">\r\n    <path d=\"${path}\" fill=\"none\" stroke=\"${stroke}\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n  </svg>`;\r\n}\r\n\r\nexport function barChartSVG(series: TimeSeriesPoint[], opts: ChartOptions = {}): string {\r\n  const options: Required<ChartOptions> = { ...DEFAULT_OPTS, ...opts } as any;\r\n  const data = sanitizeSeries(series);\r\n  if (!data.length) return '<svg xmlns=\"http://www.w3.org/2000/svg\"></svg>';\r\n  const { width, height, fill } = options;\r\n  const barWidth = Math.max(2, Math.floor((width - 20) / data.length));\r\n\r\n  const minVal = 0; // bars start at 0 baseline\r\n  const maxVal = Math.max(...data.map((d) => d.value));\r\n  const yScale = (v: number) => (maxVal === 0 ? 0 : ((v - minVal) / (maxVal - minVal)) * (height - 20));\r\n\r\n  let rects = '';\r\n  data.forEach((d, i) => {\r\n    const x = 10 + i * barWidth + 2; // 2px gap\r\n    const barH = yScale(d.value);\r\n    const y = height - barH - 10; // padding bottom 10\r\n    rects += `<rect x=\"${x}\" y=\"${y}\" width=\"${barWidth - 4}\" height=\"${barH}\" fill=\"${fill !== 'none' ? fill : '#007aff'}\" />`;\r\n  });\r\n\r\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\" viewBox=\"0 0 ${width} ${height}\">\r\n    ${rects}\r\n  </svg>`;\r\n} "],"mappings":";AASA,IAAM,eAAuC;AAAA,EAC3C,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AACR;AAEA,SAAS,eAAe,QAA8C;AACpE,SAAO,OAAO,OAAO,CAAC,MAAM,OAAO,SAAS,EAAE,KAAK,CAAC;AACtD;AAEO,SAAS,aAAa,QAA2B,OAAqB,CAAC,GAAW;AACvF,QAAM,UAAkC,EAAE,GAAG,cAAc,GAAG,KAAK;AACnE,QAAM,OAAO,eAAe,MAAM;AAClC,MAAI,CAAC,KAAK;AAAQ,WAAO;AACzB,QAAM,EAAE,OAAO,QAAQ,OAAO,IAAI;AAGlC,QAAM,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;AACnD,QAAM,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;AACnD,QAAM,SAAS,CAAC,MAAc;AAC5B,QAAI,WAAW;AAAQ,aAAO,SAAS;AACvC,WAAO,UAAW,IAAI,WAAW,SAAS,WAAY,SAAS,MAAM;AAAA,EACvE;AACA,QAAM,SAAS,CAAC,MAAc;AAC5B,WAAQ,KAAK,KAAK,SAAS,MAAO,QAAQ,MAAM;AAAA,EAClD;AAGA,MAAI,OAAO;AACX,OAAK,QAAQ,CAAC,GAAG,MAAM;AACrB,UAAM,IAAI,OAAO,CAAC;AAClB,UAAM,IAAI,OAAO,EAAE,KAAK;AACxB,YAAQ,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC;AAAA,EAC9C,CAAC;AAED,SAAO,kDAAkD,KAAK,aAAa,MAAM,kBAAkB,KAAK,IAAI,MAAM;AAAA,eACrG,IAAI,yBAAyB,MAAM;AAAA;AAElD;AAEO,SAAS,YAAY,QAA2B,OAAqB,CAAC,GAAW;AACtF,QAAM,UAAkC,EAAE,GAAG,cAAc,GAAG,KAAK;AACnE,QAAM,OAAO,eAAe,MAAM;AAClC,MAAI,CAAC,KAAK;AAAQ,WAAO;AACzB,QAAM,EAAE,OAAO,QAAQ,KAAK,IAAI;AAChC,QAAM,WAAW,KAAK,IAAI,GAAG,KAAK,OAAO,QAAQ,MAAM,KAAK,MAAM,CAAC;AAEnE,QAAM,SAAS;AACf,QAAM,SAAS,KAAK,IAAI,GAAG,KAAK,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;AACnD,QAAM,SAAS,CAAC,MAAe,WAAW,IAAI,KAAM,IAAI,WAAW,SAAS,WAAY,SAAS;AAEjG,MAAI,QAAQ;AACZ,OAAK,QAAQ,CAAC,GAAG,MAAM;AACrB,UAAM,IAAI,KAAK,IAAI,WAAW;AAC9B,UAAM,OAAO,OAAO,EAAE,KAAK;AAC3B,UAAM,IAAI,SAAS,OAAO;AAC1B,aAAS,YAAY,CAAC,QAAQ,CAAC,YAAY,WAAW,CAAC,aAAa,IAAI,WAAW,SAAS,SAAS,OAAO,SAAS;AAAA,EACvH,CAAC;AAED,SAAO,kDAAkD,KAAK,aAAa,MAAM,kBAAkB,KAAK,IAAI,MAAM;AAAA,MAC9G,KAAK;AAAA;AAEX;","names":[]}